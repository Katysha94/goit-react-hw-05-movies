{"version":3,"file":"static/js/586.1ed886f5.chunk.js","mappings":"2NACA,EAA2B,2BAA3B,EAAqE,+B,oCCqCrE,EAjCkB,WACd,IAEAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEeC,EAAAA,EAAAA,IAAUZ,GAAQ,OAAnCQ,EAAQC,EAAAI,KACdd,EAAQS,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAGrBM,QAAQC,MAAKP,EAAAK,IAAQ,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAExB,kBARY,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KASbhB,GACJ,GAAE,CAACH,KAGCoB,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaC,SACvBzB,EAAK0B,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAAYH,EAAZG,aAAcC,EAASJ,EAATI,UAAS,OAC1CC,EAAAA,EAAAA,MAAA,MAAIT,UAAWC,EAAiBC,SAAA,EAE5BH,EAAAA,EAAAA,KAAA,OAAKW,IAAKH,EAAY,mCAAAI,OAAsCJ,GAvBzD,6EAuBsFK,IAAKN,KAC9FP,EAAAA,EAAAA,KAAA,MAAAG,SAAKI,KACLP,EAAAA,EAAAA,KAAA,KAAAG,SAAIM,MAHCH,EAIJ,KAIpB,C","sources":["webpack://react-homework-template/./src/components/CastList/CastList.module.css?59ac","components/CastList/CastList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastList_castList__YQOUt\",\"castListItem\":\"CastList_castListItem__wTdLx\"};","import css from './CastList.module.css'\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { movieCast } from 'components/helpers/Api-service';\n\n const CastList = () => {\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=200x400'; \n\n    const [cast, setCast] = useState([]);\n    const { movieId } = useParams()\n    \n    useEffect(() => {\n        const getCast = async () => {\n            try {\n                const response = await movieCast(movieId)\n                setCast(response)\n            }\n            catch (error) {\n            console.error(error);\n        }\n        }\n        getCast()\n    },[movieId])\n\n    return (\n        <ul className={css.castList}>\n            {cast.map(({ id, name, profile_path, character }) => (\n                <li className={css.castListItem}\n                    key={id}>\n                    <img src={profile_path ? `https://image.tmdb.org/t/p/w200/${profile_path}` : defaultImg} alt={name} />  \n                    <h2>{name}</h2>\n                    <p>{character}</p>\n                </li>\n            ))}\n        </ul>\n    );\n }\n\nexport default CastList;"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","getCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","movieCast","sent","t0","console","error","stop","apply","arguments","_jsx","className","css","children","map","_ref2","id","name","profile_path","character","_jsxs","src","concat","alt"],"sourceRoot":""}